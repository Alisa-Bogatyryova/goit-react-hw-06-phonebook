{"version":3,"sources":["components/Container/Container.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Container/Container.js","redux/contacts-actions.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","base/defaultContacts.js","redux/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","Container","children","className","s","container","deleteContacts","createAction","changeFilter","addContacts","name","number","payload","id","uuid","ContactForm","useState","setName","setNumber","dispatch","useDispatch","contacts","useSelector","state","handleInputChange","e","target","value","form","onSubmit","preventDefault","Number","isNaN","alert","map","contact","includes","isAdded","onAddContacts","label","input","type","onChange","placeholder","pattern","title","required","btn","Filter","filter","text","htmlFor","ContactList","filterContacts","toLowerCase","filteredContacts","nameText","onClick","onDeleteBtn","connect","length","defaultContacts","phone","contactsReducer","createReducer","JSON","parse","window","localStorage","getItem","filterReducer","_","combineReducers","store","configureStore","reducer","rootReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.485ba9ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3y6L-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2p2W0\",\"input\":\"Filter_input__U1yRw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__16T0T\",\"item\":\"ContactList_item__sWlNs\",\"btn\":\"ContactList_btn__3m6ey\"};","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nexport const deleteContacts = createAction('contacts/delete');\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\nexport const addContacts = createAction('contacts/add', (name, number) => ({\r\n  payload: {\r\n    id: uuid(),\r\n    name,\r\n    number,\r\n  },\r\n}));","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addContacts } from '../../redux/contacts-actions';\r\n\r\nimport s from './ContactForm.module.css';\r\n\r\nconst ContactForm = () => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const dispatch = useDispatch();\r\n  const { contacts } = useSelector(state => state);\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (!name || !number) {\r\n      alert('Вы не ввели все контактные данные');\r\n      return;\r\n    }\r\n    if (Number.isNaN(+number)) {\r\n      alert('Телефонный номер должен содержать только цифры');\r\n      return;\r\n    }\r\n    \r\n    const onAddContacts = (name, number) => dispatch(addContacts(name, number));\r\n    const isAdded = name =>\r\n      contacts.map(contact => contact.name).includes(name);\r\n\r\n    if (isAdded(name)) {\r\n      return alert(`${name} Уже добавлен`);\r\n    } else {\r\n      onAddContacts(name, number);\r\n    }\r\n\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n  \r\n\r\n  const handleInputChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Ivan Ivanov\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n  title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n  required\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        Number\r\n        <input className={s.input}\r\n          name=\"number\"\r\n          type=\"tel\"\r\n          value={number}\r\n          onChange={handleInputChange}\r\n          placeholder=\"1111111\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n  title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n  required\r\n          \r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={s.btn}>Add contact</button>\r\n    </form>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport default ContactForm","import s from './Filter.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { changeFilter } from '../../redux/contacts-actions';\r\n\r\nfunction Filter() {\r\n  const filter = useSelector(state => state.filter);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChangeFilter = e => dispatch(changeFilter(e.target.value));\r\n  return (\r\n    <>\r\n      <label className={s.text} name=\"filter\" htmlFor=\"filter\" value={filter}>\r\n        Find contacts by name\r\n      </label>\r\n      <input\r\n        value={filter}\r\n        type=\"text\"\r\n        id=\"filter\"\r\n        onChange={handleChangeFilter}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nexport default Filter;","import { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteContacts } from '../../redux/contacts-actions';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nfunction ContactList() {\r\n  const { contacts, filter } = useSelector(state => state);\r\n  const dispatch = useDispatch();\r\n  const onDeleteBtn = id => dispatch(deleteContacts(id));\r\n\r\n  const filteredContacts = (contacts, filter) => {\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  const filterContacts = filteredContacts(contacts, filter);\r\n\r\n  return (\r\n    <>\r\n      <ul>\r\n        {filterContacts.map(({ id, name, number }) => (\r\n          <li key={id}>\r\n            <p className={s.nameText}>\r\n              {name}: <span>{number}</span>\r\n            </p>\r\n            <button type=\"button\" onClick={e => onDeleteBtn(id)}>\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  onDeleteBtn: PropTypes.func,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default ContactList;","import { connect } from 'react-redux';\r\nimport Container from './components/Container/Container';\r\nimport ContactForm from './components/ContactForm/ContactForm';\r\nimport Filter from './components/Filter/Filter';\r\nimport ContactList from './components/ContactList/ContactList';\r\n\r\nconst App = ({contacts}) => {\r\n  return (\r\n    <Container>\r\n        <ContactForm  />\r\n          <h2>Contacts</h2>\r\n        {contacts.length > 1 && (\r\n          <Filter />\r\n        )}\r\n        {contacts.length > 0 ? (\r\n          <ContactList/>\r\n        ) : (\r\n          <p>Your phonebook is empty. Please add contact.</p>\r\n        )}\r\n    </Container>\r\n  );\r\n};\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts,\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);","const defaultContacts = [\r\n  { id: 'id-1', name: 'Rosie Simpson', phone: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', phone: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', phone: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', phone: '227-91-26' },\r\n];\r\n\r\nexport default defaultContacts;","import { combineReducers, createReducer } from '@reduxjs/toolkit';\r\nimport defaultContacts from '../base/defaultContacts';\r\nimport { changeFilter, addContacts, deleteContacts } from './contacts-actions';\r\n\r\nconst contactsReducer = createReducer(\r\n  JSON.parse(window.localStorage.getItem('contacts')) ?? defaultContacts,\r\n  {\r\n    [addContacts]: (state, { payload }) => [...state, payload],\r\n    [deleteContacts]: (state, { payload }) =>\r\n      state.filter(contact => {\r\n        return contact.id !== payload;\r\n      }),\r\n  },\r\n);\r\n\r\nconst filterReducer = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n});","import { configureStore} from '@reduxjs/toolkit';\r\nimport rootReducer from './contacts-reducer';\r\n\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport store from './redux/store'\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n    <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1GHnp\",\"label\":\"ContactForm_label__2zt2Q\",\"input\":\"ContactForm_input__1d_vr\",\"btn\":\"ContactForm_btn__2Dm4t\"};"],"sourceRoot":""}